#include <stdio.h>

char board[3][3] = {{'1', '2', '3'},
                    {'4', '5', '6'},
                    {'7', '8', '9'}};
char currentPlayer = 'X'; // Player 'X' starts the game

// Function to print the Tic-Tac-Toe board
void printBoard() {
    printf("\n\n");
    printf("Player 1 (X) - Player 2 (O)\n\n");
    printf("     |     |     \n");
    printf("  %c  |  %c  |  %c  \n", board[0][0], board[0][1], board[0][2]);
    printf("_____|_____|_____\n");
    printf("     |     |     \n");
    printf("  %c  |  %c  |  %c  \n", board[1][0], board[1][1], board[1][2]);
    printf("_____|_____|_____\n");
    printf("     |     |     \n");
    printf("  %c  |  %c  |  %c  \n", board[2][0], board[2][1], board[2][2]);
    printf("     |     |     \n");
    printf("\n");
}

// Function to check if the current player has won
int checkWin() {
    // Check rows and columns for a win
    for (int i = 0; i < 3; i++) {
        if (board[i][0] == board[i][1] && board[i][1] == board[i][2])
            return 1;  // Row win
        if (board[0][i] == board[1][i] && board[1][i] == board[2][i])
            return 1;  // Column win
    }
    
    // Check diagonals for a win
    if (board[0][0] == board[1][1] && board[1][1] == board[2][2])
        return 1;  // Diagonal win
    if (board[0][2] == board[1][1] && board[1][1] == board[2][0])
        return 1;  // Diagonal win

    return 0;  // No winner yet
}

// Function to check if the board is full (no moves left)
int checkDraw() {
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (board[i][j] != 'X' && board[i][j] != 'O')
                return 0;  // There is still an available spot
        }
    }
    return 1;  // Board is full
}

// Function to take the player's move
void playerMove() {
    int choice;
    printf("Player %c, enter a number (1-9) to place your mark: ", currentPlayer);
    scanf("%d", &choice);

    // Adjust for 1-based index input
    choice--;

    int row = choice / 3;
    int col = choice % 3;

    if (board[row][col] != 'X' && board[row][col] != 'O') {
        board[row][col] = currentPlayer;
    } else {
        printf("Invalid move! Try again.\n");
        playerMove();
    }
}

// Function to switch player
void switchPlayer() {
    if (currentPlayer == 'X') {
        currentPlayer = 'O';
    } else {
        currentPlayer = 'X';
    }
}

// Main function to control the flow of the game
int main() {
    int gameOver = 0;

    while (!gameOver) {
        printBoard();
        playerMove();

        // Check for a win or draw
        if (checkWin()) {
            printBoard();
            printf("Player %c wins!\n", currentPlayer);
            gameOver = 1;
        } else if (checkDraw()) {
            printBoard();
            printf("It's a draw!\n");
            gameOver = 1;
        } else {
            switchPlayer();
        }
    }

    return 0;
}
